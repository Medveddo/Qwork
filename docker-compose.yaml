version: "3.3"

services:
  db:
    image: postgres:alpine
    volumes:
      - postgres-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}

  redis:
    image: redis:alpine

  backend:
    image: qwork-backend
    build:
      context: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL:?err}
      - DRAMATIQ_BROKER_URL=${DRAMATIQ_BROKER_URL:?err}
    command: bash -c "./scripts/run.sh"
    depends_on:
      - db
      - redis
      - fluent-bit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: backend.logs
  
  dramatiq:
    image: qwork-backend
    build:
      context: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL:?err}
      - DRAMATIQ_BROKER_URL=${DRAMATIQ_BROKER_URL:?err}
    command: >
      sh -c "./scripts/run_dramatiq.sh"
    depends_on:
      - db
      - redis
      - fluent-bit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: dramatiq.logs

  scheduler:
    image: qwork-backend
    build:
      context: ./backend
    environment:
      - DATABASE_URL=${DATABASE_URL:?err}
      - DRAMATIQ_BROKER_URL=${DRAMATIQ_BROKER_URL:?err}
    command: >
      sh -c "./scripts/run_scheduler.sh"
    depends_on:
      - db
      - redis
      - fluent-bit
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: scheduler.logs

  frontend:
    image: qwork-frontend
    build:
      context: ./frontend
      args:
        - VITE_API_URL=${VITE_API_URL:?err}
        - VITE_ENVIRONMENT=${VITE_ENVIRONMENT:?err}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/Caddyfile_prod:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    volumes:
      - grafana-data:/var/lib/grafana
  
  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    volumes:
      - cloudbeaver-data:/opt/cloudbeaver/workspace

  fluent-bit:
    image: fluent/fluent-bit
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      - zinc
    volumes:
      - ./fluent-bit/conf:/fluent-bit/etc
    environment:
      - ZINC_FIRST_ADMIN_USER=${ZINC_FIRST_ADMIN_USER:?err}
      - ZINC_FIRST_ADMIN_PASSWORD=${ZINC_FIRST_ADMIN_PASSWORD:?err}

  zinc:
    image: qwork-zinc
    build:
      context: ./zinc
      dockerfile: Dockerfile
      args:
        - ZINC_FIRST_ADMIN_USER=${ZINC_FIRST_ADMIN_USER:?err}
        - ZINC_FIRST_ADMIN_PASSWORD=${ZINC_FIRST_ADMIN_PASSWORD:?err}
    volumes:
      - zinc-data:/data
  
  activity_simulator:
    image: qwork-backend
    build:
      context: ./backend
    command: bash -c "./scripts/run_simulator.sh"
    depends_on:
      - db
      - redis

volumes:
  caddy_data:
  caddy_config:
  postgres-db:
  prometheus-data:
  grafana-data:
  cloudbeaver-data:
  zinc-data:
